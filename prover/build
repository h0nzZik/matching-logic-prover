#!/usr/bin/env python3

import sys
from os import (path, environ)

repo_dir = path.dirname(__file__)
sys.path.append(path.join(repo_dir, 'ext/'))
from kninja import *
environ['PATH'] = path.join(repo_dir, 'ext/k-light/bin/') + ':' + environ['PATH']

# Project Definition
# ==================

proj = KProject()

# Matching Logic Prover
# =====================

other_md_files = [ 'smt.md'
                 , 'kore.md'
                 , 'smtlib-to-kore.md'
                 , 'strategies/core.md'
                 , 'strategies/knaster-tarski.md'
                 , 'strategies/matching.md'
                 , 'strategies/simplification.md'
                 , 'strategies/search-bound.md'
                 , 'strategies/smt.md'
                 , 'strategies/unfolding.md'
                 ]
prover = proj.definition( alias = 'prover'
                        , backend = 'ocaml'
                        , main = 'prover.md'
                        , other = other_md_files
                        , runner_script = './prover'
                        )

# Functional tests
# ----------------

prover.tests( inputs = glob('t/*.prover')
            , implicit_inputs = glob('t/definitions/*.prover')
            )
prover.tests(inputs = glob('t/*.smt2'))

# Unit Tests
# ----------

test_driver = proj.definition( alias = 'test-driver'
                             , backend = 'ocaml'
                             , main = 'unit-tests.md'
                             , other = other_md_files + ['prover.md']
                             , runner_script = './prover'
                             )
test_driver.tests(alias = 'unit-tests', inputs = glob('t/match-unit-tests'))

# SMTLIB Translation
# ==================

smtlib_testdriver = proj.definition( alias = 'smtlib'
                                   , backend = 'java'
                                   , main = 'smt.md'
                                   , flags = '--main-module SMT-TEST-DRIVER --syntax-module SMT-TEST-DRIVER'
                                   , runner_script = './prover'
                                   )

smtlib_testdriver.proofs( glob = proj.tangle('smtlib2-tests.md').path # TODO: FIXME
                        , alias = 'smtlib2-tests'
                        )

proj.main()
