symbol listSorted(ArrayIntInt, Int, SetInt, Int) : Bool
axiom \forall { variable("H") { ArrayIntInt }, variable("X") { Int }, variable("F") { SetInt }, variable("PREV_VAL") { Int } }
      \iff-lfp( listSorted(variable("H") { ArrayIntInt }, variable("X") { Int }, variable("F") { SetInt }, variable("PREV_VAL") { Int })
              , \or( \exists { }
                     \and( \equals(variable("X") { Int }, 0)
                         , \equals(variable("F") { SetInt }, emptyset)
                         )
                   , \exists { variable("F_I") { SetInt } , variable("VAL_I") { Int } , variable("X_I") { Int } }
                     \and( listSorted(variable("H") { ArrayIntInt }, variable("X_I") { Int }, variable("F_I") { SetInt }, variable("VAL_I") { Int })
                         , gt(variable("X") { Int }, 0)
                         , \equals(select(variable("H") { ArrayIntInt }, variable("X") { Int }) , variable("X_I") { Int })
                         , \equals(variable("F") { SetInt } , union(variable("F_I") { SetInt }, singleton(variable("X") { Int })))
                         , disjoint(variable("F_I") { SetInt }, singleton(variable("X") { Int }))
                         , \equals(variable("VAL_I") { Int } , select(variable("H") { ArrayIntInt }, plus(variable("X") { Int }, 1)))
                         , gt(variable("VAL_I") { Int }, variable("PREV_VAL") { Int })
                         )
                   )
              )
