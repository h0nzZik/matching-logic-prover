// Kore axiomatization of bouncing ball HA

sort State

symbol reach( State , State ) : Bool

axiom functional(reach)

symbol evolve( State , Real ) : State

symbol valZ( State ) : Real
symbol valV( State ) : Real

axiom functional(valZ)
axiom functional(valV)

symbol mode( State ) : Int

axiom functional(mode)
axiom functional(evolve)

symbol transition( State , State ) : Bool
axiom functional( transition )

axiom smt-lemma( \forall { S1 { State }, S2 { State } }
                    \equals( transition( S1 { State }, S2 { State })
                            , \and( \equals( mode( S1 { State }), mode( S2 { State } ))
                                  , \equals( valZ( S1 { State }), 0 )
                                  , \equals( valZ( S2 { State }), 0 )
                                  , \equals( valV( S2 { State })
                                           , mult( -1, valV( S1 { State }))
                                           )
                                  )
                            )
               )

symbol modeInvariant( State , Real ) : Bool

axiom functional(modeInvariant)

axiom smt-lemma( \forall { S1 { State }, T { Real } }
                    \and( \equals( mode(evolve( S1 { State } , T { Real }))
                                 , mode(S1 { State } )
                                 )
                        , \equals( valV(evolve ( S1 { State }, T { Real }))
                                 , plus(valV(S1 { State }), mult(10, T { Real }))
                                 )
                        , \equals( valZ(evolve ( S1 { State }, T { Real }))
                                 , plus( valZ( S1 { State })
                                       , plus( mult(valV( S1 { State }), T { Real })
                                              , div(mult(10, mult(T { Real }, T { Real })), 2)
                                             )
                                       )
                                 )
                         )
                )


axiom smt-lemma( \forall { S1 { State }, T { Real } }
                     \equals(  modeInvariant( S1 { State }, T { Real } )
                            , \implies( \and( gt( valZ( S1 { State }), 0), gt( T { Real }, 0))
                                        , gt( plus( valZ( S1 { State })
                                                   , plus( mult(valV( S1 { State }), T { Real })
                                                          , div(mult(10, mult(T { Real }, T { Real })), 2)
                                                         )
                                                   )
                                            , 0
                                            )
                                        )
                            )
               )


axiom \forall { S1 { State },  S2 { State } }
      \iff-lfp( reach( S1 { State } , S2 { State } )
              , \or ( \exists { } \and ( \equals ( valZ(S1 { State }), valZ(S2 { State }) )
                                       , \equals ( valV(S1 { State }), valV(S2 { State }) )
                                       , \equals ( mode(S1 { State }), mode(S2 { State }) )
                                       )
                    , \exists { T { Real } } \and( gt( T { Real }, 0 )
                                                 , \equals ( S2 { State }
                                                           , evolve( S1 { State } , T { Real })
                                                           )
                                                 , modeInvariant( S1 { State } , T { Real } )
                                                 )
             //       , \exists { } \and( transition(S1 { State }, S2 { State }) )
                    , \exists { SI { State } }  \and ( reach(S1 { State }, SI { State })
                                                     , reach(SI { State }, S2 { State })
                                                     )
                    )
              )
