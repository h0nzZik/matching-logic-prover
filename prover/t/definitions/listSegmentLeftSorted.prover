symbol listSegmentLeftSorted(ArrayIntInt, Int, Int, SetInt, Int, Int) : Bool
axiom \forall { H : ArrayIntInt, X : Int, Y : Int, F : SetInt, PREV_VAL : Int, MAX : Int }
      \iff-lfp( listSegmentLeftSorted(H, X, Y, F, PREV_VAL, MAX)
              , \or( \and( \equals(X, Y)
                         , \equals(F, emptyset)
                         , \not(gt(PREV_VAL, MAX))
                         , .Patterns
                         )
                   , \and( listSegmentLeftSorted( H
                                                , variable("X", !I:Int) { Int }
                                                , Y
                                                , variable("F", !I:Int) { SetInt }
                                                , variable("VAL", !I:Int) { Int }
                                                , MAX
                                                , .Patterns
                                                )
                         , gt(X, 0)
                         , \equals(select(H, X) , variable("X", !I:Int) { Int })
                         , \equals(F , union(variable("F", !I:Int) { SetInt }, singleton(X)))
                         , disjoint(variable("F", !I:Int) { SetInt }, singleton(X))

                         , \equals(variable("VAL", !I:Int) { Int } , select(H, plus(X, 1)))
                         // Strictly decreasing
                         , gt(variable("VAL", !I:Int) { Int }, PREV_VAL)
                         , \not(gt(variable("VAL", !I:Int) { Int }, MAX))
                         , .Patterns
                         )
                   , .Patterns
                   )
              )
