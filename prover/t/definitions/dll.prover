symbol dll(ArrayIntInt, Int, SetInt) : Bool
axiom \forall { variable("H") { ArrayIntInt }, variable("X") { Int }, variable("F") { SetInt } }
      \iff-lfp( dll(variable("H") { ArrayIntInt }, variable("X") { Int }, variable("F") { SetInt })
              , \or( \and( \equals(variable("X") { Int }, 0)
                         , \equals(variable("F") { SetInt }, emptyset)
                         , .Patterns
                         )
                   , \and( dll( H
                              , variable("X", !I:Int) { Int }
                              , variable("F", !J:Int) { SetInt }
                              , .Patterns
                              )
                         , gt(variable("X") { Int }, 0)
                         , gt(variable("X", !I:Int) { Int } , 0)
                         , \equals( variable("X", !I:Int) { Int }
                                  , select(variable("H") { ArrayIntIntInt }, plus(variable("X") { Int }, 1)))
                         , \equals( variable("X") { Int }
                                  , select(variable("H") { ArrayIntInt }, plus(variable("X", !I:Int) { Int }, 2)))
                         , \not(isMember(variable("X") { Int }, variable("F", !J:Int) { SetInt }))
                         , \equals(variable("F") { SetInt }, union(variable("F", !J:Int) { SetInt }, singleton(variable("X") { Int })))
                         , .Patterns
                         )
                   , .Patterns
                   )
              )
