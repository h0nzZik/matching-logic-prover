claim \implies( \and( listSegmentLeftSorted( variable("H") { ArrayIntInt } 
                                    , variable("X") { Int } 
                                    , variable("Y") { Int } 
                                    , variable("F") { SetInt }
                                    , variable("MIN") { Int }
                                    , variable("MAX") { Int } 
                                    )
                    , listSorted( variable("H") { ArrayIntInt }
                                , variable("Y") { Int }
                                , variable("G") { SetInt }
                                , variable("MIN2") { Int }) 
                    , \equals( variable("K") { SetInt }, union(variable("F") { SetInt }, variable("G") { SetInt })) 
                    , disjoint(variable("F") { SetInt }, variable("G") { SetInt }) 
                    , \not(gt(variable("MAX") { Int }, variable("MIN2") { Int }))
                     )
              , \and( listSorted( variable("H") { ArrayIntInt }
                                , variable("X") { Int }
                                , variable("K") { SetInt }
                                , variable("MIN") { Int }
                                )
                     )
              )

strategy kt ; normalize
            ; ( ( simplify
                ; left-unfold-Nth(0) ;
                  ( ( right-unfold-Nth(0, 0) ; smt)
                  | ( right-unfold-Nth(0, 1) ; smt)
                  )
                )
              | ( right-unfold-Nth(0, 1)
                ; instantiate-existentials
                ; instantiate-aux
                ; instantiate-aux
                ; smt
                )
              )


// strategy search-bound(4)
