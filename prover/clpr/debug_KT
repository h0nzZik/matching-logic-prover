---final check---
ActiveVars = [H, T, Y, F1]
PassiveVars = [X, F]
GAtom = lr(H, T, Y, F1)
GConstraints = [gt(X, 0), eq(T, ref(H, X)), z3_not(mem(X, F1)), eqset(F, add(F1, X))]
HAtom = lr(H, X, Y, F)
HConstraints = []
BAtom = lr(H, T, T1, F2)
Subst1 = [eq(H, H), eq(T, T), eq(Y, T1), eq(F1, F2)]
BConstraints = [gt(T1, 0), eq(Y, ref(H, T1)), z3_not(mem(T1, F2)), eqset(F1, add(F2, T1))]
GAtoms1 = []
GConstraints1 = [gt(X, 0), eq(T, ref(H, X)), z3_not(mem(X, F2)), eqset(F, add(F2, X))]
HAtom1 = lr(H, X, T1, F)
HConstraints1 = []
CP = [3, 4]
HAtomCriticalVars = [Y, F]
Subst2 = [eq(F, F3)]
GAtoms2 = []
GConstraints2 = [gt(X, 0), eq(T, ref(H, X)), z3_not(mem(X, F2)), eqset(F3, add(F2, X))]
HAtom2 = lr(H, X, T1, F3)
HConstraints2 = []

KTSet = [
obligation([], [gt(T1, 0), eq(Y, ref(H, T1)), z3_not(mem(T1, F2)), eqset(F1, add(F2, T1)), gt(X, 0), eq(T, ref(H, X)), z3_not(mem(X, F1)), eqset(F, add(F1, X))], [], [gt(X, 0), eq(T, ref(H, X)), z3_not(mem(X, F2)), eqset(F3, add(F2, X))]), 
obligation([lr(H, X, T1, F3)], [gt(X, 0), eq(T, ref(H, X)), z3_not(mem(X, F2)), eqset(F3, add(F2, X)), gt(T1, 0), eq(Y, ref(H, T1)), z3_not(mem(T1, F2)), eqset(F1, add(F2, T1)), gt(X, 0), eq(T, ref(H, X)), z3_not(mem(X, F1)), eqset(F, add(F1, X))], [lr(H, X, Y, F)], [])
]

---KT(1:1) ends---

---KT (one case) ends, 3 conjunctions collected.---

---KT ends, 1 disjunctions collected---
OrSet:

---- this is (6a2)
obligation([], [gt(T1, 0), eq(Y, ref(H, T1)), z3_not(mem(T1, F2)), eqset(F1, add(F2, T1)), gt(X, 0), eq(T, ref(H, X)), z3_not(mem(X, F1)), eqset(F, add(F1, X))], [], [gt(X, 0), eq(T, ref(H, X)), z3_not(mem(X, F2)), eqset(F3, add(F2, X))]),
 
---- this is (6b), needs right unfold
obligation([lr(H, X, T1, F3)], [gt(X, 0), eq(T, ref(H, X)), z3_not(mem(X, F2)), eqset(F3, add(F2, X)), gt(T1, 0), eq(Y, ref(H, T1)), z3_not(mem(T1, F2)), eqset(F1, add(F2, T1)), gt(X, 0), eq(T, ref(H, X)), z3_not(mem(X, F1)), eqset(F, add(F1, X))], [lr(H, X, Y, F)], []), 

---- this is base case, needs right unfold
obligation([], [gt(X, 0), eq(T, ref(H, X)), z3_not(mem(X, F1)), eqset(F, add(F1, X)), eq(T, Y), eqset(F1, emptyset)], [lr(H, X, Y, F)], [])


