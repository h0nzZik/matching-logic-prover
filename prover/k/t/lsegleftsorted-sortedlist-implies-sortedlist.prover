claim \implies( \and( listSegmentLeftSorted( variable("H") { ArrayIntInt } 
                                    , variable("X") { Int } 
                                    , variable("Y") { Int } 
                                    , variable("F") { Set }
                                    , variable("MIN") { Int }
                                    , variable("MAX") { Int } 
                                    , .Patterns
                                    )
                    , listSorted( variable("H") { ArrayIntInt }
                                , variable("Y") { Int }
                                , variable("G") { Set }
                                , variable("MIN2") { Int }, .Patterns) 

                    , \equals( variable("K") { Set }, union(variable("F") { Set }, variable("G") { Set })) 
                    , disjoint(variable("F") { Set }, variable("G") { Set }) 

                    , \not(gt(variable("MAX") { Int }, variable("MIN2") { Int }))
                    , .Patterns )
              , \and( listSorted( variable("H") { ArrayIntInt }
                                , variable("X") { Int }
                                , variable("K") { Set }
                                , variable("MIN") { Int }
                                , .Patterns)
                    , .Patterns )
              )

strategy search-bound(5)

/*
strategy kt # head(listSegmentLeftSorted) # useAffectedHeuristic
       ; ( ( simplify ; substitute-equals-for-equals ; direct-proof )
         | ( simplify ; direct-proof )
         | ( right-unfold-Nth(0, 1) ; simplify ; direct-proof )
         )
*/
