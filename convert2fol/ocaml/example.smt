(declare-sort MLNat)
(declare-sort Map)
(declare-fun PIrange (MLNat MLNat MLNat) Bool)
(declare-fun zero () MLNat)
(declare-fun succ (MLNat) MLNat)
(declare-fun plus (MLNat MLNat) MLNat)
(assert (forall ((M MLNat) (N MLNat)) (= (plus M N) (plus N M))))
(assert (forall ((M MLNat)) (= (plus M zero) M)))
(assert (forall ((M MLNat) (N MLNat)) (= (plus M (succ N)) (succ (plus M N)))))
(assert (forall ((M MLNat)) (forall (($16 MLNat)) (= (exists (($17 MLNat) ($18 MLNat)) (and (PIrange $17 $18 $16) (= M $17) (= M $18))) (= M $16)))))
(assert (forall ((M MLNat)) (forall (($13 MLNat)) (= (exists (($14 MLNat) ($15 MLNat)) (and (PIrange $14 $15 $13) (= (succ M) $14) (= M $15))) (exists () (and (PIbot $13)))))))
(assert (forall ((M MLNat) (N MLNat)) (forall (($8 MLNat)) (= (exists (($11 MLNat) ($12 MLNat)) (and (PIrange $11 $12 $8) (= M $11) (= (succ N) $12))) (or (exists (($9 MLNat) ($10 MLNat)) (and (PIrange $9 $10 $8) (= M $9) (= N $10))) (= (succ N) $8))))))
(assert (not (= (plus (succ zero) (succ zero)) (succ (succ zero))) ))
(check-sat)
(get-model)

